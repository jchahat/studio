// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides AI-powered recommendations for items that pair well together.
 *
 * - getItemPairingRecommendations - A function that returns item pairing recommendations.
 * - ItemPairingRecommendationsInput - The input type for the getItemPairingRecommendations function.
 * - ItemPairingRecommendationsOutput - The return type for the getItemPairingRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ItemPairingRecommendationsInputSchema = z.object({
  itemDescription: z
    .string()
    .describe('Description of the item for which to find pairings.'),
  userFeedback: z
    .string()
    .optional()
    .describe('Optional: User feedback or preferences to consider.'),
  popularOpinions: z
    .string()
    .optional()
    .describe('Optional: Popular opinions or trends to consider.'),
});

export type ItemPairingRecommendationsInput = z.infer<
  typeof ItemPairingRecommendationsInputSchema
>;

const ItemPairingRecommendationsOutputSchema = z.object({
  recommendedPairs: z
    .array(z.string())
    .describe('List of items recommended to pair with the input item.'),
  reasoning: z
    .string()
    .describe('Explanation of why these items are recommended as pairs.'),
});

export type ItemPairingRecommendationsOutput = z.infer<
  typeof ItemPairingRecommendationsOutputSchema
>;

export async function getItemPairingRecommendations(
  input: ItemPairingRecommendationsInput
): Promise<ItemPairingRecommendationsOutput> {
  return itemPairingRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'itemPairingRecommendationsPrompt',
  input: {schema: ItemPairingRecommendationsInputSchema},
  output: {schema: ItemPairingRecommendationsOutputSchema},
  prompt: `You are an expert in product pairings and recommendations. Based on the item description, user feedback, and popular opinions, suggest items that would pair well together.

Item Description: {{{itemDescription}}}
User Feedback: {{{userFeedback}}}
Popular Opinions: {{{popularOpinions}}}

Provide a list of recommended items and a brief explanation of why they are a good match.
`,
});

const itemPairingRecommendationsFlow = ai.defineFlow(
  {
    name: 'itemPairingRecommendationsFlow',
    inputSchema: ItemPairingRecommendationsInputSchema,
    outputSchema: ItemPairingRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
